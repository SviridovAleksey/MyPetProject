{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, FormArray } from '@angular/forms';\nimport { AppService } from 'app/app/app.service';\nimport { CreateNewInstructionsService } from 'app/services/create-new-instructions.service';\nimport { InstructStepService } from 'app/services/InstructStepsService';\nlet CreateNewComponent = class CreateNewComponent {\n  constructor(formBuilder, _shareInstStepServ, _createNewInsService, _appSercice) {\n    this.formBuilder = formBuilder;\n    this._shareInstStepServ = _shareInstStepServ;\n    this._createNewInsService = _createNewInsService;\n    this._appSercice = _appSercice;\n    this.createInstURL = 'http://localhost:8089/instruction-server/api/v1/instructions';\n    this.newSteps = [];\n    this.stepInfoId = 0;\n    this.createContactForm();\n    this.createInstructionInfoForm();\n  }\n\n  ngOnInit() {}\n\n  putNewInstruction(inst) {\n    this._appSercice.putResouce(this.createInstURL, inst).subscribe(data => console.log(data));\n  }\n\n  createInstructionInfoForm() {\n    this.instructionInfoForm = new FormGroup({\n      name: new FormControl(''),\n      description: new FormControl(''),\n      levelDTO: new FormGroup({\n        name: new FormControl('unknown'),\n        level: new FormControl('0')\n      }),\n      constructDTO: new FormGroup({\n        name: new FormControl('unknown'),\n        value: new FormControl('0')\n      })\n    });\n  }\n\n  createContactForm() {\n    this.contactForm = new FormGroup({\n      sections: new FormArray([this.initNewStepSection()])\n    });\n  }\n\n  initNewStepSection() {\n    return new FormGroup({\n      name: new FormControl(''),\n      StepTextDTO: new FormGroup({\n        text: new FormControl('')\n      })\n    });\n  }\n\n  addSteps() {\n    const control = this.contactForm.get('sections');\n    control.push(this.initNewStepSection());\n  }\n\n  getSteps(form) {\n    return form.controls.sections.controls;\n  }\n\n  onSubmitStep(index, value) {\n    let stepTextDTO = {\n      text: value.StepTextDTO.value.text\n    };\n    let stepInfoDTO = {\n      name: value.name.value,\n      stepPlace: index,\n      infoId: this.stepInfoId,\n      stepTextDTO: stepTextDTO\n    };\n    this.newSteps[index] = stepInfoDTO;\n  }\n\n  createInstruction(instruction) {\n    let level = {\n      name: instruction.levelDTO.value.name,\n      level: instruction.levelDTO.value.level\n    };\n    let construct = {\n      name: instruction.constructDTO.value.name,\n      value: instruction.constructDTO.value.value\n    };\n    let instructionInfo = {\n      id: 0,\n      name: instruction.name.value,\n      description: instruction.description.value,\n      levelDTO: level,\n      constructDTO: construct\n    };\n    this.putNewInstruction(instructionInfo);\n  }\n\n  flipNewInst() {\n    if (document.getElementById(\"flipNewInst\").style.transform == 'rotateY(180deg)') {\n      document.getElementById(\"flipNewInst\").style.transform = 'rotateY(0deg)';\n    } else {\n      document.getElementById(\"flipNewInst\").style.transform = 'rotateY(180deg)';\n    }\n  }\n\n  flipCard(id) {\n    if (document.getElementById(\"flipNewStep\" + id).style.transform == 'rotateY(180deg)') {\n      document.getElementById(\"flipNewStep\" + id).style.transform = 'rotateY(0deg)';\n    } else {\n      document.getElementById(\"flipNewStep\" + id).style.transform = 'rotateY(180deg)';\n    }\n  }\n\n};\nCreateNewComponent = __decorate([Component({\n  selector: 'app-create-new-instructions',\n  templateUrl: './create-new-instructions.component.html',\n  styleUrls: ['./create-new-instructions.component.css'],\n  providers: [CreateNewInstructionsService]\n}), __metadata(\"design:paramtypes\", [FormBuilder, InstructStepService, typeof (_a = typeof CreateNewInstructionsService !== \"undefined\" && CreateNewInstructionsService) === \"function\" ? _a : Object, AppService])], CreateNewComponent);\nexport { CreateNewComponent };","map":null,"metadata":{},"sourceType":"module"}