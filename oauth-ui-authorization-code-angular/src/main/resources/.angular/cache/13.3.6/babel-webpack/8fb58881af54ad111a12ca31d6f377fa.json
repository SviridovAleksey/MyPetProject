{"ast":null,"code":"import { FormGroup, FormBuilder, FormControl, FormArray } from '@angular/forms';\nimport { AppService } from 'app/app/app.service';\nimport { InstructStepService } from 'app/services/InstructStepsService';\nimport { HomeComponent } from '../home/home.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/app/app.service\";\nimport * as i3 from \"../home/home.component\";\nimport * as i4 from \"app/services/InstructStepsService\";\nimport * as i5 from \"@angular/common\";\n\nfunction CreateNewComponent_div_19_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 18)(1, \"div\", 19)(2, \"div\", 4)(3, \"div\", 5);\n    i0.ɵɵelement(4, \"textarea\", 20);\n    i0.ɵɵelementStart(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function CreateNewComponent_div_19_li_4_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.flipCard(i_r3);\n    });\n    i0.ɵɵtext(6, \"\\u21BB\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 8);\n    i0.ɵɵtext(8, \"Add image\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"div\", 5);\n    i0.ɵɵelement(11, \"textarea\", 20);\n    i0.ɵɵelementStart(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function CreateNewComponent_div_19_li_4_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.flipCard(i_r3);\n    });\n    i0.ɵɵtext(13, \"\\u21BB\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(14, \"textarea\", 21);\n    i0.ɵɵelementStart(15, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CreateNewComponent_div_19_li_4_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const step_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.onSubmitStep(i_r3, step_r2.controls);\n    });\n    i0.ɵɵtext(16, \"Save Step\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"flipNewStep\", i_r3, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", step_r2.controls.name.value)(\"formControl\", step_r2.controls.name);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"value\", step_r2.controls.name.value)(\"formControl\", step_r2.controls.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", step_r2.controls.StepTextDTO.controls.text);\n  }\n}\n\nfunction CreateNewComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0)(2, \"div\", 13)(3, \"ul\", 14);\n    i0.ɵɵtemplate(4, CreateNewComponent_div_19_li_4_Template, 17, 6, \"li\", 15);\n    i0.ɵɵelementStart(5, \"li\", 16);\n    i0.ɵɵlistener(\"click\", function CreateNewComponent_div_19_Template_li_click_5_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.addSteps();\n    });\n    i0.ɵɵelementStart(6, \"div\", 17);\n    i0.ɵɵtext(7, \"+\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.contactForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getSteps(ctx_r0.contactForm));\n  }\n}\n\nexport let CreateNewComponent = /*#__PURE__*/(() => {\n  class CreateNewComponent {\n    constructor(formBuilder, _appService, _home, _shareInstStepServ) {\n      this.formBuilder = formBuilder;\n      this._appService = _appService;\n      this._home = _home;\n      this._shareInstStepServ = _shareInstStepServ;\n      this.createInstURL = 'http://localhost:8089/instruction-server/api/v1/instructions';\n      this.stepURL = 'http://localhost:8089/instruction-server/api/v1/steps';\n\n      this._shareInstStepServ.clearNewInstructionFormTrigger.subscribe(data => {\n        this.createContactForm();\n        this.createInstructionInfoForm();\n        this.instructionInfoForm.value.instructionLevel = data;\n      });\n\n      this._shareInstStepServ.clearNewInstructionFormTrigger.subscribe(() => {\n        this.createContactForm();\n        this.createInstructionInfoForm();\n      });\n\n      this._shareInstStepServ.redactionInstructionTrigger.subscribe(data => {\n        this.createContactForm();\n        this.createInstructionFormFromInstruction(data);\n        this.createContactFormFromInstruct(data);\n      });\n\n      this.createContactForm();\n      this.createInstructionInfoForm();\n    }\n\n    ngOnInit() {}\n\n    createInstructionFormFromInstruction(instruct) {\n      this.instructionInfoForm = new FormGroup({\n        id: new FormControl(instruct.id),\n        name: new FormControl(instruct.name),\n        description: new FormControl(instruct.description),\n        instructionLevel: new FormControl(instruct.levelOwner),\n        constructDTO: new FormGroup({\n          name: new FormControl(instruct.constructDTO.name),\n          value: new FormControl(instruct.constructDTO.value)\n        })\n      });\n    }\n\n    createContactFormFromInstruct(instruct) {\n      this._appService.getResource(this.stepURL + '/' + instruct.id).subscribe(data => this.saveStepsInForm(data), error => {\n        for (var i = 0; i < error.error.messages.length; i++) {\n          this._home.showTextMessageErr(error.error.messages[i]);\n        }\n      });\n    }\n\n    saveStepsInForm(steps) {\n      const control = this.contactForm.get('sections');\n      control.clear();\n\n      for (var i = 0; i < steps.length; i++) {\n        control.insert(steps[i].stepPlace, this.initStepSectionFromStepDTO(steps[i]));\n      }\n    }\n\n    createInstructionInfoForm() {\n      this.instructionInfoForm = new FormGroup({\n        id: new FormControl('0'),\n        name: new FormControl(''),\n        description: new FormControl(''),\n        instructionLevel: new FormControl('0'),\n        constructDTO: new FormGroup({\n          name: new FormControl('unknown'),\n          value: new FormControl('0')\n        })\n      });\n    }\n\n    createContactForm() {\n      this.contactForm = new FormGroup({\n        sections: new FormArray([this.initNewStepSection()])\n      });\n    }\n\n    initStepSectionFromStepDTO(stepInfoDTO) {\n      return new FormGroup({\n        id: new FormControl(stepInfoDTO.id),\n        name: new FormControl(stepInfoDTO.name),\n        StepTextDTO: new FormGroup({\n          text: new FormControl(stepInfoDTO.stepTextDTO.text)\n        })\n      });\n    }\n\n    initNewStepSection() {\n      return new FormGroup({\n        id: new FormControl(0),\n        name: new FormControl(''),\n        StepTextDTO: new FormGroup({\n          text: new FormControl('')\n        })\n      });\n    }\n\n    putNewInstruction(inst) {\n      this._appService.putResource(this.createInstURL, inst).subscribe(data => {\n        this.showTab(data);\n\n        this._home.showTextMessageSuccess('The instruction \"' + data.name + '\" is successfully save');\n      }, error => {\n        for (var i = 0; i < error.error.messages.length; i++) {\n          this._home.showTextMessageErr(error.error.messages[i]);\n        }\n      });\n    }\n\n    putStep(stepInfoDTO) {\n      this._appService.putResource(this.stepURL, stepInfoDTO).subscribe(data => this._home.showTextMessageSuccess('The step \"' + data.name + '\" is successfully save'), error => {\n        for (var i = 0; i < error.error.messages.length; i++) {\n          this._home.showTextMessageErr(error.error.messages[i]);\n        }\n      });\n    }\n\n    showTab(inst) {\n      this.instructionInfoForm.get(\"id\").setValue(inst.id, {\n        emitEvent: true\n      });\n\n      this._home.addNewStepViewerWithoutChangePage(inst);\n    }\n\n    addSteps() {\n      const control = this.contactForm.get('sections');\n      control.push(this.initNewStepSection());\n    }\n\n    getSteps(form) {\n      return form.controls.sections.controls;\n    }\n\n    onSubmitStep(index, value) {\n      console.log(value);\n      let stepTextDTO = {\n        text: value.StepTextDTO.value.text\n      };\n      let stepInfoDTO = {\n        id: value.id.value,\n        name: value.name.value,\n        stepPlace: index,\n        infoId: this.instructionInfoForm.value.id,\n        stepTextDTO: stepTextDTO\n      };\n      this.putStep(stepInfoDTO);\n    }\n\n    createInstruction(instruction) {\n      let construct = {\n        name: instruction.constructDTO.value.name,\n        value: instruction.constructDTO.value.value\n      };\n      let instructionInfo = {\n        id: instruction.id.value,\n        name: instruction.name.value,\n        description: instruction.description.value,\n        levelOwner: instruction.instructionLevel.value,\n        constructDTO: construct\n      };\n      this.putNewInstruction(instructionInfo);\n    }\n\n    isInstructionCreate() {\n      if (this.instructionInfoForm.value.id == '0') {\n        return false;\n      } else {\n        return true;\n      }\n    }\n\n    flipNewInst() {\n      if (document.getElementById(\"flipNewInst\").style.transform == 'rotateY(180deg)') {\n        document.getElementById(\"flipNewInst\").style.transform = 'rotateY(0deg)';\n      } else {\n        document.getElementById(\"flipNewInst\").style.transform = 'rotateY(180deg)';\n      }\n    }\n\n    flipCard(id) {\n      if (document.getElementById(\"flipNewStep\" + id).style.transform == 'rotateY(180deg)') {\n        document.getElementById(\"flipNewStep\" + id).style.transform = 'rotateY(0deg)';\n      } else {\n        document.getElementById(\"flipNewStep\" + id).style.transform = 'rotateY(180deg)';\n      }\n    }\n\n  }\n\n  CreateNewComponent.ɵfac = function CreateNewComponent_Factory(t) {\n    return new (t || CreateNewComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AppService), i0.ɵɵdirectiveInject(i3.HomeComponent), i0.ɵɵdirectiveInject(i4.InstructStepService));\n  };\n\n  CreateNewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateNewComponent,\n    selectors: [[\"app-create-new-instructions\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [1, \"newInstContainer\"], [1, \"flip-cardNewInst\"], [\"id\", \"flipNewInst\", 1, \"flip-card-inner\"], [1, \"flip-card-front\"], [1, \"nameTurnContainer\"], [\"type\", \"text\", \"placeholder\", \"Instruction name\", \"maxlength\", \"20\", \"formControlName\", \"name\", 1, \"inputPlaceName\", 3, \"value\"], [1, \"buttonTurn\", 3, \"click\"], [1, \"btn\"], [1, \"flip-card-back\"], [\"name\", \"newStepText\", \"placeholder\", \"Description\", \"maxlength\", \"120\", \"formControlName\", \"description\", 1, \"inputPlaceText\"], [1, \"btn\", 3, \"click\"], [4, \"ngIf\"], [\"formArrayName\", \"sections\"], [1, \"stepContainer\"], [\"class\", \"flip-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"flip-card\", 3, \"click\"], [1, \"newCard\"], [1, \"flip-card\"], [1, \"flip-card-inner\", 3, \"id\"], [\"type\", \"text\", \"placeholder\", \"Step name\", \"maxlength\", \"20\", 1, \"inputPlaceName\", 3, \"value\", \"formControl\"], [\"name\", \"newStepText\", \"placeholder\", \"Step text\", \"maxlength\", \"120\", 1, \"inputPlaceText\", 3, \"formControl\"], [\"type\", \"submit\", 1, \"btn\", 3, \"click\"]],\n    template: function CreateNewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"textarea\", 6);\n        i0.ɵɵelementStart(7, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateNewComponent_Template_button_click_7_listener() {\n          return ctx.flipNewInst();\n        });\n        i0.ɵɵtext(8, \"\\u21BB\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"button\", 8);\n        i0.ɵɵtext(10, \"Add image\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 5);\n        i0.ɵɵelement(13, \"textarea\", 6);\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateNewComponent_Template_button_click_14_listener() {\n          return ctx.flipNewInst();\n        });\n        i0.ɵɵtext(15, \"\\u21BB\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"textarea\", 10);\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function CreateNewComponent_Template_button_click_17_listener() {\n          return ctx.createInstruction(ctx.instructionInfoForm.controls);\n        });\n        i0.ɵɵtext(18, \"Save instruction\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(19, CreateNewComponent_div_19_Template, 8, 2, \"div\", 12);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.instructionInfoForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"value\", ctx.instructionInfoForm.controls.name.value);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", ctx.instructionInfoForm.controls.name.value);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInstructionCreate());\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.MaxLengthValidator, i1.NgControlStatus, i1.FormControlName, i5.NgIf, i1.FormArrayName, i5.NgForOf, i1.FormControlDirective],\n    styles: [\".newInstContainer[_ngcontent-%COMP%]{width:100%;margin:3% -.29%;list-style:none;padding:0;text-align:-webkit-center}.flip-cardNewInst[_ngcontent-%COMP%]{background-color:transparent;height:300px;width:24.4%;padding:.3%}.flip-cardNewInst[_ngcontent-%COMP%]   .flip-card-front[_ngcontent-%COMP%]{background-color:#f44336;color:#000}.flip-cardNewInst[_ngcontent-%COMP%]   .flip-card-back[_ngcontent-%COMP%]{background-color:#ff9800;color:#fff}.stepContainer[_ngcontent-%COMP%]{width:100%;margin:0 -.29%;list-style:none;padding:0}.flip-card[_ngcontent-%COMP%]{background-color:transparent;float:left;height:300px;width:24.4%;padding:.3%}.flip-card-inner[_ngcontent-%COMP%]{display:inline-block;width:100%;height:100%;text-align:center;transition:transform .6s;transform-style:preserve-3d;box-shadow:0 4px 8px #0003}.flip-card-inner[_ngcontent-%COMP%]:hover{transform:scale(1.03)}.flip-card-front[_ngcontent-%COMP%], .flip-card-back[_ngcontent-%COMP%]{display:flex;flex-direction:column;position:absolute;width:100%;height:100%;-webkit-backface-visibility:hidden;backface-visibility:hidden}.flip-card-front[_ngcontent-%COMP%]{background-color:#bbb;color:#000}.flip-card-back[_ngcontent-%COMP%]{background-color:#2980b9;color:#fff;transform:rotateY(180deg)}.nameTurnContainer[_ngcontent-%COMP%]{width:95%;display:flex;-webkit-margin-end:auto;margin-inline-end:auto;word-break:break-word}.btn[_ngcontent-%COMP%]{background:border-box;margin-top:auto;border:none;color:#fff;padding:12px 30px;cursor:pointer;font-size:20px;width:100%}.btn[_ngcontent-%COMP%]:hover{background-color:#1abc9c}.buttonTurn[_ngcontent-%COMP%]{background-color:transparent;border:none;color:#fff;padding-right:15px;width:5%;text-align:center;text-decoration:none;display:inline-block;font-size:16px;cursor:pointer;border-radius:50%;-webkit-margin-end:auto;margin-inline-end:auto}.newCard[_ngcontent-%COMP%]{display:flex;flex-direction:column;background-color:#1abc9c;width:100%;height:100%;justify-content:center;align-items:center;color:#fff;font-size:350%}textarea[_ngcontent-%COMP%]::-moz-placeholder{color:#fff}textarea[_ngcontent-%COMP%]::placeholder{color:#fff}.inputPlaceName[_ngcontent-%COMP%]{width:95%;padding-top:5%;align-self:center;background-color:transparent;color:#fff;border:none;font-size:160%;text-align:center;resize:none;outline:none;padding-left:10%}.inputPlaceText[_ngcontent-%COMP%]{width:95%;padding-top:5%;height:100%;align-self:center;background-color:transparent;color:#fff;border:none;font-size:140%;text-align:center;resize:none;overflow:hidden;outline:none}@media (max-width: 795px){.newInstContainer[_ngcontent-%COMP%]{margin:5% 0}.flip-cardNewInst[_ngcontent-%COMP%]{width:99.4%;height:200px;display:block;margin-bottom:5px}.stepContainer[_ngcontent-%COMP%]{margin:0}.flip-card[_ngcontent-%COMP%]{width:99.4%;height:200px;display:block;margin-bottom:5px}.inputPlaceText[_ngcontent-%COMP%]{padding-top:0}}\"]\n  });\n  return CreateNewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}