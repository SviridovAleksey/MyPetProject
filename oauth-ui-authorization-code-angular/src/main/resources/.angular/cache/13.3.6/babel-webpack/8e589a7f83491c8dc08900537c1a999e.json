{"ast":null,"code":"import { Cookie } from 'ng2-cookies';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AppService } from 'app/app/app.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/app/app.service\";\nexport let CreateNewInstructionsService = /*#__PURE__*/(() => {\n  class CreateNewInstructionsService {\n    constructor(_http, _appSercice) {\n      this._http = _http;\n      this._appSercice = _appSercice;\n      this.createInstURL = 'http://localhost:8089/instruction-server/api/v1/instructions';\n    }\n\n    createNewInstruction(newInstruction) {\n      var headers = new HttpHeaders({\n        'Accept': 'application/json',\n        'Content-type': 'application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + Cookie.get('access_token')\n      });\n      return this._http.put(this.createInstURL, newInstruction, {\n        headers\n      }).catch(e => {\n        if (e.status === 401 || e.status === 403) {\n          this._appSercice.updateTtoken();\n        } else {\n          return Observable.throw(e.json().error || 'Server error');\n        }\n      });\n    }\n\n  }\n\n  CreateNewInstructionsService.ɵfac = function CreateNewInstructionsService_Factory(t) {\n    return new (t || CreateNewInstructionsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppService));\n  };\n\n  CreateNewInstructionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CreateNewInstructionsService,\n    factory: CreateNewInstructionsService.ɵfac\n  });\n  return CreateNewInstructionsService;\n})();","map":null,"metadata":{},"sourceType":"module"}